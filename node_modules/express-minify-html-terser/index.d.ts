import { IncomingMessage, ServerResponse } from "http";

interface HtmlMinifierTerserOptions {
  caseSensitive?: boolean;
  collapseBooleanAttributes?: boolean;
  collapseInlineTagWhitespace?: boolean;
  collapseWhitespace?: boolean;
  conservativeCollapse?: boolean;
  continueOnParseError?: boolean;
  customAttrAssign?: Array<RegExp>;
  customAttrCollapse?: RegExp;
  customAttrSurround?: Array<RegExp>;
  customEventAttributes?: Array<RegExp>;
  decodeEntities?: boolean;
  html5?: boolean;
  ignoreCustomComments?: Array<RegExp>;
  ignoreCustomFragments?: Array<RegExp>;
  includeAutoGeneratedTags?: boolean;
  keepClosingSlash?: boolean;
  maxLineLength?: number;
  minifyCSS?: boolean | Object | Function;
  minifyJS?: boolean | Object | Function;
  minifyURLs?: boolean | Object | Function;
  preserveLineBreaks?: boolean;
  preventAttributesEscaping?: boolean;
  processConditionalComments?: boolean;
  processScripts?: Array<string>;
  quoteCharacter?: string;
  removeAttributeQuotes?: boolean;
  removeComments?: boolean;
  removeEmptyAttributes?: boolean | Function;
  removeEmptyElements?: boolean;
  removeOptionalTags?: boolean;
  removeRedundantAttributes?: boolean;
  removeScriptTypeAttributes?: boolean;
  removeStyleLinkTypeAttributes?: boolean;
  removeTagWhitespace?: boolean;
  sortAttributes?: boolean;
  sortClassName?: boolean;
  trimCustomFragments?: boolean;
  useShortDoctype?: boolean;
}

interface MinifyHTMLOptions {
  /**
   * Override res.render method
   */
  override?: boolean;
  /**
   * The exception_url optional parameter is a single value, or an array of strings, regexes and functions that can be used to check whether minifying should be skipped entirely.
   */
  exception_url?: boolean;
  /**
   * HTMLMinifier options
   * See [docs](https://github.com/terser/html-minifier-terser)
   */
  htmlMinifier?: HtmlMinifierTerserOptions;
}

export default function miniyHTML(
  Options?: MinifyHTMLOptions
): (
  req?: IncomingMessage,
  res?: ServerResponse,
  next?: (err?: Error) => void
) => void;
